
trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
 VmImageName: 'ubuntu-latest'
 subscription : 'serviceconnection225'
 SQLserver: 'rjasqls01.database.windows.net'
 DatabaseName: 'rjasqldb01'
 SQLuser: 'sqladmin'
 SQLpassword: 'Rja@1234'
 ACR: 'rjaacr01.azurecr.io'
  
stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(VmImageName)
        steps:
          - task: replacetokens@5
            inputs:
              rootDirectory: '$(build.sourcesdirectory)/src/MyHealth.Web'
              targetFiles: 'appsettings.json'
              encoding: 'auto'
              tokenPattern: 'rm'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true
          - task: replacetokens@5
            inputs:
              rootDirectory: '$(build.sourcesdirectory)/'
              targetFiles: 'mhc-aks.yaml'
              encoding: 'auto'
              tokenPattern: 'rm'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'serviceconnection225'
              azureContainerRegistry: '{"loginServer":"rjaacr01.azurecr.io", "id" : "/subscriptions/a10b4f23-720f-491b-a662-18b413f945be/resourceGroups/RjaDevops/providers/Microsoft.ContainerRegistry/registries/RJAACR01"}'
              dockerComposeFile: '**/docker-compose.ci.build.yml'
              action: 'Run services'
              detached: false
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'serviceconnection225'
              azureContainerRegistry: '{"loginServer":"rjaacr01.azurecr.io", "id" : "/subscriptions/a10b4f23-720f-491b-a662-18b413f945be/resourceGroups/RjaDevops/providers/Microsoft.ContainerRegistry/registries/RJAACR01"}'
              dockerComposeFile: '**/docker-compose.yml'
              dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
              action: 'Build services'
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'serviceconnection225'
              azureContainerRegistry: '{"loginServer":"rjaacr01.azurecr.io", "id" : "/subscriptions/a10b4f23-720f-491b-a662-18b413f945be/resourceGroups/RjaDevops/providers/Microsoft.ContainerRegistry/registries/RJAACR01"}'
              dockerComposeFile: '**/docker-compose.yml'
              dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
              action: 'Push services'
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'serviceconnection225'
              azureContainerRegistry: '{"loginServer":"rjaacr01.azurecr.io", "id" : "/subscriptions/a10b4f23-720f-491b-a662-18b413f945be/resourceGroups/RjaDevops/providers/Microsoft.ContainerRegistry/registries/RJAACR01"}'
              dockerComposeFile: '**/docker-compose.yml'
              dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
              action: 'Lock services'
              outputDockerComposeFile: '$(Build.StagingDirectory)/docker-compose.yml'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(agent.builddirectory)'
              Contents: |
                **/mhc-aks.yaml
                **/*.dacpac
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Build
    condition: succeeded('Build')
    jobs:
    - deployment: DB
      displayName: 'DB Deployment'
      environment: 'development'
      pool:
       vmImage: 'windows-2019'
      strategy:
       runOnce:
         deploy:
          steps:
            - task: SqlAzureDacpacDeployment@1
              displayName: 'Execute Azure SQL : DacpacTask'
              inputs:
                azureSubscription: 'serviceconnection225'
                AuthenticationType: 'server'
                ServerName: '$(SQLserver)'
                DatabaseName: '$(DatabaseName)'
                SqlUsername: '$(SQLuser)'
                SqlPassword: '$(SQLpassword)'
                deployType: 'DacpacTask'
                DeploymentAction: 'Publish'
                DacpacFile: '$(Agent.BuildDirectory)/**/*.dacpac'
                IpDetectionMethod: 'IPAddressRange'
                StartIpAddress: '0.0.0.0'
                EndIpAddress: '255.255.255.255'
    - deployment: AKS
      displayName: 'AKS Deployment'
      environment: 'development'
      pool: 
       vmImage: $(vmImageName)
      strategy:
       runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            displayName: 'Create Deployments & Services in AKS'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'serviceconnection225'
              azureResourceGroup: 'RjaDevops'
              kubernetesCluster: 'RJAAKS01'
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(Agent.BuildDirectory)/deploy/mhc-aks.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'serviceconnection225'
              azureContainerRegistry: 'rjaacr01.azurecr.io'
              secretName: 'mysecretkey'
              versionSpec: '1.8.1'
              checkLatest: true
          
          - task: Kubernetes@1
            displayName: 'Update image in AKS'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'serviceconnection225'
              azureResourceGroup: 'RjaDevops'
              kubernetesCluster: 'RJAAKS01'
              command: 'set'
              arguments: 'image deployments/mhc-front mhc-front=$(ACR)/myhealth.web:$(Build.BuildId)'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'serviceconnection225'
              azureContainerRegistry: 'rjaacr01.azurecr.io'
              secretName: 'mysecretkey'
              versionSpec: '1.8.1'
              checkLatest: true
